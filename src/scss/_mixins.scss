$maxWidth: 1920;
$maxWidthContainer: 1280;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type == 1 {
    // Только если нужно менять свойство, когда контейнер уменьшается
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} *
          ((100vw - 320px) / #{$maxWidthContainer - 320})
      );
    }
  } @else if $type==2 {
    // Только если нужно менять свойство, когда контейнер увеличивается
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
      );
    }
  } @else {
    // Если нужно, чтобы свойство увеличивалось и уменьшалось пропорционально окну браузера всегда
    #{$property}: calc(
      #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
    );
  }
}

// Брейкпоинты

$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 1000px,
  xl: 1330px,
);

@mixin before($breakpoint) {
  $size: map-get($breakpoints, $breakpoint);
  @if ($size == 0) {
    @content;
  } @else {
    @media screen and (max-width: ($size - 1px)) {
      @content;
    }
  }
}
